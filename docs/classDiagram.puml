@startuml Data Generator
skinparam classAttributeIconSize 0

class Server{
+ run(): void
- construct_request_processor(): void
- processRequest(): void
- valid_api?(api: ExternalAPI, method: String): boolean
}

class RequestProcessor{
    + initialize(): RequestProcessor
    + Process(): String
}

class ExternalAPI{
    + initialize(options: Map): ExternalAPI
}

class SearchCH{
    + getStationboard(options: Map)): String
    + getConnections(option: Map): String
}

interface formatter{
    - DestinationDataStructure: Map
    - originDataStructure: Map
    + initialize(originDataStructure: Map = {}): formatter
    + format(data: Map): String
}

class DeutschebahnCOM {
}

class SheneoIO {
}

class SncfCOM{
}

class JSONformatter{
}

class PDFformatter{
    + format(data: Map): String
}

class Timetable {
  - table_data: Array
  + initialize(): void
  + document(): Prawn::Document
  + draw_logo(path: String): void
  + headers=(headers: Array): void
  + draw_table(options: Map): void
  + draw_heading(date: DateTime): void
  + save(filename: String): void
  + stop=(stop: Map): void
}


class Dotenv{
}

'Singleton
class Config{
    'available regions will have one or more API classes associated with it
    + regionAPI: Map
    + instance(): Config
    + load(): void
}

RequestProcessor -right-> formatter
formatter <|.. JSONformatter
formatter <|.. PDFformatter

PDFformatter -right-> Timetable

ExternalAPI <|.left. HTTParty
SearchCH .up.|> ExternalAPI
DeutschebahnCOM .up.|> ExternalAPI
SheneoIO .up.|> ExternalAPI
SncfCOM .up.|> ExternalAPI

Server -up-> RequestProcessor
RequestProcessor -left-> ExternalAPI

'Dotenv file not a class
ExternalAPI -left-> Dotenv

'Main will be just a file, maybe called index, doesn't really matter
main -up-> Server
main -right-> Config

@enduml